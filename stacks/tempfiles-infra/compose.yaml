version: "3.8"
services:
  backend:
    container_name: tempfiles-backend
    image: minpeter/tempfiles-backend:latest
    restart: always
    volumes:
      - tempfiles-backend:/tmp
    environment:
      - JWT_SECRET=simplesecret
      - DB_TYPE=sqlite
    labels:
      - traefik.enable=true
      - traefik.http.routers.tmp-backend.rule=Host(`api.tmpf.me`)
      - traefik.http.services.tmp-backend.loadbalancer.server.port=5000
      - traefik.http.routers.tmp-backend.entrypoints=websecure
    networks:
      - traefik
  new-frontend:
    container_name: tempfiles-frontend-v2
    image: minpeter/tempfiles-frontend-v2:latest
    restart: always
    depends_on:
      - backend
    labels:
      - traefik.enable=true
      - traefik.http.routers.tmp-frontend-new.rule=Host(`new.tmpf.me`)
      - traefik.http.services.tmp-frontend-new.loadbalancer.server.port=80
      - traefik.http.routers.tmp-frontend-new.entrypoints=websecure
    networks:
      - traefik
  dev-backend:
    container_name: tempfiles-backend-dev
    image: minpeter/tempfiles-backend:latest-dev
    restart: always
    volumes:
      - tempfiles-backend-dev:/tmp
    environment:
      - JWT_SECRET=simplesecret
      - DB_TYPE=sqlite
    labels:
      - traefik.enable=true
      - traefik.http.routers.tmp-backend-dev.rule=Host(`dev.tmpf.me`)
      - traefik.http.services.tmp-backend-dev.loadbalancer.server.port=5000
      - traefik.http.routers.tmp-backend-dev.entrypoints=websecure
    networks:
      - traefik
networks:
  traefik:
    external: true
volumes:
  tempfiles-backend: null
  tempfiles-backend-dev: null
